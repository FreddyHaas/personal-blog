{"ast":null,"code":"var _jsxFileName = \"/Users/frederikhaas/repos/personal-blog/client-visitor/src/components/CommentForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"../api/axios\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentForm(_ref) {\n  _s();\n  let {\n    id,\n    addCommentToState\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  // Submit new comment\n  const addComment = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`/posts/${id}/comments`, JSON.stringify({\n        name,\n        text: comment,\n        post: id\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      addCommentToState(response.data);\n      setName(\"\");\n      setComment(\"\");\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg(\"No server resonse\");\n      } else {\n        setErrMsg(\"Creation of comment failed\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-comment\",\n      onSubmit: addComment,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Comment: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        id: \"comment\",\n        onChange: e => setComment(e.target.value),\n        value: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(CommentForm, \"vH+92YTVlUCVvX4jKcc7H2phl9I=\");\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["useState","axios","CommentForm","id","addCommentToState","name","setName","comment","setComment","errMsg","setErrMsg","addComment","e","preventDefault","response","post","JSON","stringify","text","headers","data","err","target","value"],"sources":["/Users/frederikhaas/repos/personal-blog/client-visitor/src/components/CommentForm.js"],"sourcesContent":["import { useState } from \"react\"\nimport axios from \"../api/axios\"\n\nfunction CommentForm({ id, addCommentToState }) {\n    const [name, setName] = useState(\"\")\n    const [comment, setComment] = useState(\"\")\n    const [errMsg, setErrMsg] = useState(\"\")\n\n    // Submit new comment\n    const addComment = async (e) => {\n        e.preventDefault()\n        try {\n            const response = await axios.post(\n                `/posts/${id}/comments`,\n                JSON.stringify({ name, text: comment, post: id }),\n                {\n                    headers: { \"Content-Type\": \"application/json\" },\n                }\n            )\n            addCommentToState(response.data)\n            setName(\"\")\n            setComment(\"\")\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg(\"No server resonse\")\n            } else {\n                setErrMsg(\"Creation of comment failed\")\n            }\n        }\n    }\n\n    return (\n        <>\n            <h3>Add comment</h3>\n            <form className=\"add-comment\" onSubmit={addComment}>\n                <label htmlFor=\"name\">Name: </label>\n                <input\n                    type=\"text\"\n                    id=\"name\"\n                    onChange={(e) => setName(e.target.value)}\n                    value={name}\n                />\n                <label htmlFor=\"comment\">Comment: </label>\n                <textarea\n                    type=\"text\"\n                    id=\"comment\"\n                    onChange={(e) => setComment(e.target.value)}\n                    value={comment}\n                />\n                <button type=\"submit\">Add</button>\n                <p className={errMsg ? \"errmsg\" : \"offscreen\"}>{errMsg}</p>\n            </form>\n        </>\n    )\n}\n\nexport default CommentForm\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,cAAc;AAAA;AAAA;AAEhC,SAASC,WAAW,OAA4B;EAAA;EAAA,IAA3B;IAAEC,EAAE;IAAEC;EAAkB,CAAC;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMW,UAAU,GAAG,MAAOC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC5B,UAASZ,EAAG,WAAU,EACvBa,IAAI,CAACC,SAAS,CAAC;QAAEZ,IAAI;QAAEa,IAAI,EAAEX,OAAO;QAAEQ,IAAI,EAAEZ;MAAG,CAAC,CAAC,EACjD;QACIgB,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAClD,CAAC,CACJ;MACDf,iBAAiB,CAACU,QAAQ,CAACM,IAAI,CAAC;MAChCd,OAAO,CAAC,EAAE,CAAC;MACXE,UAAU,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOa,GAAG,EAAE;MACV,IAAI,EAACA,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEP,QAAQ,GAAE;QAChBJ,SAAS,CAAC,mBAAmB,CAAC;MAClC,CAAC,MAAM;QACHA,SAAS,CAAC,4BAA4B,CAAC;MAC3C;IACJ;EACJ,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAM,SAAS,EAAC,aAAa;MAAC,QAAQ,EAAEC,UAAW;MAAA,wBAC/C;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACpC;QACI,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAGC,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACU,MAAM,CAACC,KAAK,CAAE;QACzC,KAAK,EAAElB;MAAK;QAAA;QAAA;QAAA;MAAA,QACd,eACF;QAAO,OAAO,EAAC,SAAS;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC1C;QACI,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,SAAS;QACZ,QAAQ,EAAGO,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACU,MAAM,CAACC,KAAK,CAAE;QAC5C,KAAK,EAAEhB;MAAQ;QAAA;QAAA;QAAA;MAAA,QACjB,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eAClC;QAAG,SAAS,EAAEE,MAAM,GAAG,QAAQ,GAAG,WAAY;QAAA,UAAEA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD;EAAA,gBACR;AAEX;AAAC,GAnDQP,WAAW;AAAA,KAAXA,WAAW;AAqDpB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}