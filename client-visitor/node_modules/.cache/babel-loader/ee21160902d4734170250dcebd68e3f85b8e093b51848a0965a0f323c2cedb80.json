{"ast":null,"code":"var _jsxFileName = \"/Users/frederikhaas/repos/personal-blog/client-visitor/src/components/PostComments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Comment from './Comment';\nimport CommentForm from './CommentForm';\nimport axios from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostComments = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const [comments, setComments] = useState();\n  const [errMsg, setErrMsg] = useState();\n\n  // Load comments \n  async function loadComments() {\n    try {\n      const response = await axios.get(`/posts/${id}/comments`);\n      return response.data;\n    } catch (err) {\n      setErrMsg('Unable to load posts');\n    }\n  }\n\n  // Store comments\n  useEffect(() => {\n    const storeComments = async () => {\n      setComments(await loadComments());\n    };\n    storeComments();\n  }, []);\n\n  // Display comments \n  const displayComments = () => {\n    const display = [];\n    if (comments !== undefined) {\n      comments.forEach(comment => {\n        display.push( /*#__PURE__*/_jsxDEV(Comment, {\n          name: comment.name,\n          text: comment.text\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this));\n      });\n    }\n    return display;\n  };\n  const displayedComments = displayComments();\n\n  // Function to update comments after adding new comment\n\n  const addCommentToState = newComment => {\n    setComments([...comments, newComment]);\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: errMsg ? 'errmsg' : 'offscreen',\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      id: id,\n      addCommentToState: addCommentToState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), displayedComments.length == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"no-comments\",\n        children: \"No comments yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this) : displayedComments]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(PostComments, \"pNVyu6V24tPdZribMK8LzwQGBXA=\");\n_c = PostComments;\nexport default PostComments;\nvar _c;\n$RefreshReg$(_c, \"PostComments\");","map":{"version":3,"names":["useState","useEffect","Comment","CommentForm","axios","PostComments","id","comments","setComments","errMsg","setErrMsg","loadComments","response","get","data","err","storeComments","displayComments","display","undefined","forEach","comment","push","name","text","_id","displayedComments","addCommentToState","newComment","length"],"sources":["/Users/frederikhaas/repos/personal-blog/client-visitor/src/components/PostComments.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Comment from './Comment'\nimport CommentForm from './CommentForm'\nimport axios from '../api/axios'\n\nconst PostComments = ({ id }) => {\n    const [comments, setComments] = useState()\n    const [errMsg, setErrMsg] = useState()  \n\n\n    // Load comments \n    async function loadComments () {\n        try {\n            const response = await axios.get(`/posts/${id}/comments`)\n            return response.data\n        } catch (err) {\n            setErrMsg('Unable to load posts')\n        }\n    }\n\n    // Store comments\n    useEffect(() => {\n        const storeComments = async () => {\n            setComments(await loadComments())\n        }\n        storeComments()\n    }, [])\n\n    // Display comments \n    const displayComments = () => {\n\n        const display = []\n\n        if (comments !== undefined) {\n\n            comments.forEach(comment => {\n                display.push(\n                    <Comment\n                        key={comment._id}\n                        name={comment.name}\n                        text={comment.text}\n                    />\n                )\n            })\n        }\n        return display\n    }\n\n    const displayedComments = displayComments()  \n\n    // Function to update comments after adding new comment\n\n    const addCommentToState = (newComment) => {\n        setComments([...comments, newComment])\n        return\n    }\n\n\n    return (\n        <>\n                <p className={errMsg ? 'errmsg' : 'offscreen'}>{errMsg}</p>\n                <CommentForm \n                    id={id}\n                    addCommentToState={addCommentToState}\n                />  \n                <div className='comments'>\n                    <h3>Comments</h3>\n                    {displayedComments.length == 0 ? \n                        <p id='no-comments'>No comments yet</p> : displayedComments} \n                </div>  \n        </>\n    )\n\n}\n\nexport default PostComments"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,cAAc;AAAA;AAAA;AAEhC,MAAMC,YAAY,GAAG,QAAY;EAAA;EAAA,IAAX;IAAEC;EAAG,CAAC;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,EAAE;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,EAAE;;EAGtC;EACA,eAAeW,YAAY,GAAI;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,UAASP,EAAG,WAAU,CAAC;MACzD,OAAOM,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVL,SAAS,CAAC,sBAAsB,CAAC;IACrC;EACJ;;EAEA;EACAT,SAAS,CAAC,MAAM;IACZ,MAAMe,aAAa,GAAG,YAAY;MAC9BR,WAAW,CAAC,MAAMG,YAAY,EAAE,CAAC;IACrC,CAAC;IACDK,aAAa,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,eAAe,GAAG,MAAM;IAE1B,MAAMC,OAAO,GAAG,EAAE;IAElB,IAAIX,QAAQ,KAAKY,SAAS,EAAE;MAExBZ,QAAQ,CAACa,OAAO,CAACC,OAAO,IAAI;QACxBH,OAAO,CAACI,IAAI,eACR,QAAC,OAAO;UAEJ,IAAI,EAAED,OAAO,CAACE,IAAK;UACnB,IAAI,EAAEF,OAAO,CAACG;QAAK,GAFdH,OAAO,CAACI,GAAG;UAAA;UAAA;UAAA;QAAA,QAGlB,CACL;MACL,CAAC,CAAC;IACN;IACA,OAAOP,OAAO;EAClB,CAAC;EAED,MAAMQ,iBAAiB,GAAGT,eAAe,EAAE;;EAE3C;;EAEA,MAAMU,iBAAiB,GAAIC,UAAU,IAAK;IACtCpB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEqB,UAAU,CAAC,CAAC;IACtC;EACJ,CAAC;EAGD,oBACI;IAAA,wBACQ;MAAG,SAAS,EAAEnB,MAAM,GAAG,QAAQ,GAAG,WAAY;MAAA,UAAEA;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eAC3D,QAAC,WAAW;MACR,EAAE,EAAEH,EAAG;MACP,iBAAiB,EAAEqB;IAAkB;MAAA;MAAA;MAAA;IAAA,QACvC,eACF;MAAK,SAAS,EAAC,UAAU;MAAA,wBACrB;QAAA,UAAI;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,EAChBD,iBAAiB,CAACG,MAAM,IAAI,CAAC,gBAC1B;QAAG,EAAE,EAAC,aAAa;QAAA,UAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAI,GAAGH,iBAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7D;EAAA,gBACX;AAGX,CAAC;AAAA,GApEKrB,YAAY;AAAA,KAAZA,YAAY;AAsElB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}