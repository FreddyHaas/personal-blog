{"ast":null,"code":"var _jsxFileName = \"/Users/frederikhaas/repos/personal-blog/client-visitor/src/components/CommentForm.js\",\n  _s = $RefreshSig$();\nimport axios from '../api/axios';\nimport { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentForm = _ref => {\n  _s();\n  let {\n    id,\n    addCommentToState\n  } = _ref;\n  const [name, setName] = useState('');\n  const [comment, setComment] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n\n  // Submit new comment\n  const addComment = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`/posts/${id}/comments`, JSON.stringify({\n        name: name,\n        text: comment,\n        post: id\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response);\n      addCommentToState(response.data);\n      setName('');\n      setComment('');\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No server resonse');\n      } else {\n        console.log(err);\n        setErrMsg('Creation of comment failed');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-comment\",\n      onSubmit: addComment,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Comment: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        id: \"comment\",\n        onChange: e => setComment(e.target.value),\n        children: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: errMsg ? 'errmsg' : 'offscreen',\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(CommentForm, \"l2D71yZ2uId3lH6dYzI9QmjpzzI=\");\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["axios","useState","CommentForm","id","addCommentToState","name","setName","comment","setComment","errMsg","setErrMsg","addComment","e","preventDefault","response","post","JSON","stringify","text","headers","console","log","data","err","target","value"],"sources":["/Users/frederikhaas/repos/personal-blog/client-visitor/src/components/CommentForm.js"],"sourcesContent":["import axios from '../api/axios'\nimport { useState } from 'react'\n\nconst CommentForm = ({ id, addCommentToState }) => {\n\n    const [name, setName] = useState('')\n    const [comment, setComment] = useState('')\n    const [errMsg, setErrMsg] = useState('')\n\n    // Submit new comment\n    const addComment = async (e) => {\n        e.preventDefault()\n        try {\n            const response = await axios.post(`/posts/${id}/comments`,\n                JSON.stringify({ name: name, text: comment, post: id  }),\n                {\n                    headers: { 'Content-Type': 'application/json' }\n                }\n            )\n            console.log(response)\n            addCommentToState(response.data)\n            setName('')\n            setComment('')\n        } catch (err) {\n            if(!err?.response) {\n                setErrMsg('No server resonse')\n            } else {\n                console.log(err)\n                setErrMsg('Creation of comment failed')\n            }\n        }\n    }  \n\n    return (\n        <>\n        <h3>Add comment</h3>\n        <form className='add-comment' onSubmit={addComment}>\n                        <label htmlFor='name'>Name: </label>\n                        <input\n                            type='text'\n                            id='name'\n                            onChange={(e) => setName(e.target.value)}\n                            value={name}\n                        />\n                        <label htmlFor='comment'>Comment: </label>\n                        <textarea\n                            type='text'\n                            id='comment'\n                            onChange={(e) => setComment(e.target.value)}\n                            >\n                                {comment}\n                            </textarea>\n                        <button>Add</button>\n                        <p className={errMsg ? 'errmsg' : 'offscreen'}>{errMsg}</p>\n                    </form>\n        </>\n     )\n}\n\nexport default CommentForm"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,cAAc;AAChC,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,MAAMC,WAAW,GAAG,QAA+B;EAAA;EAAA,IAA9B;IAAEC,EAAE;IAAEC;EAAkB,CAAC;EAE1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMU,UAAU,GAAG,MAAOC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAE,UAASZ,EAAG,WAAU,EACrDa,IAAI,CAACC,SAAS,CAAC;QAAEZ,IAAI,EAAEA,IAAI;QAAEa,IAAI,EAAEX,OAAO;QAAEQ,IAAI,EAAEZ;MAAI,CAAC,CAAC,EACxD;QACIgB,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAClD,CAAC,CACJ;MACDC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;MACrBV,iBAAiB,CAACU,QAAQ,CAACQ,IAAI,CAAC;MAChChB,OAAO,CAAC,EAAE,CAAC;MACXE,UAAU,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOe,GAAG,EAAE;MACV,IAAG,EAACA,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAET,QAAQ,GAAE;QACfJ,SAAS,CAAC,mBAAmB,CAAC;MAClC,CAAC,MAAM;QACHU,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;QAChBb,SAAS,CAAC,4BAA4B,CAAC;MAC3C;IACJ;EACJ,CAAC;EAED,oBACI;IAAA,wBACA;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAM,SAAS,EAAC,aAAa;MAAC,QAAQ,EAAEC,UAAW;MAAA,wBACnC;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACpC;QACI,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAGC,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACY,MAAM,CAACC,KAAK,CAAE;QACzC,KAAK,EAAEpB;MAAK;QAAA;QAAA;QAAA;MAAA,QACd,eACF;QAAO,OAAO,EAAC,SAAS;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC1C;QACI,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,SAAS;QACZ,QAAQ,EAAGO,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACY,MAAM,CAACC,KAAK,CAAE;QAAA,UAEvClB;MAAO;QAAA;QAAA;QAAA;MAAA,QACD,eACf;QAAA,UAAQ;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eACpB;QAAG,SAAS,EAAEE,MAAM,GAAG,QAAQ,GAAG,WAAY;QAAA,UAAEA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD;EAAA,gBAChB;AAEX,CAAC;AAAA,GAtDKP,WAAW;AAAA,KAAXA,WAAW;AAwDjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}