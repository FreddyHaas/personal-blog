{"ast":null,"code":"var _jsxFileName = \"/Users/frederikhaas/repos/personal-blog/client-author/src/Components/Signup.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from 'react';\n// Import faCheck, faTimes, faInfoCircle\n\n// Implement spell \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMAIL_REGEX = /\\S+@\\S+/;\nconst PASSWORD_REGEX = /[a-zA-Z]/;\nconst Signup = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false);\n  const [userEmail, setEmailFocus] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  // Set focus to first item\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  // Check valid username\n  useEffect(() => {\n    const result = EMAIL_REGEX.test(email);\n    console.log(result);\n    console.log(email);\n    setValidEmail(result);\n  }, [email]);\n\n  // Check if password is valid and matches confirm password\n  useEffect(() => {\n    const result = PASSWORD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [email, pwd, matchPwd]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Signup, \"weWpOK/K5a3ntekcg7Y9B/ImrYk=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useRef","useState","useEffect","EMAIL_REGEX","PASSWORD_REGEX","Signup","userRef","errRef","email","setEmail","validEmail","setValidEmail","userEmail","setEmailFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","result","test","console","log","match"],"sources":["/Users/frederikhaas/repos/personal-blog/client-author/src/Components/Signup.js"],"sourcesContent":["import { useRef, useState, useEffect } from 'react'\n// Import faCheck, faTimes, faInfoCircle\n\n// Implement spell \nconst EMAIL_REGEX = /\\S+@\\S+/\nconst PASSWORD_REGEX = /[a-zA-Z]/\n\nconst Signup = () => {\n    const userRef = useRef()\n    const errRef = useRef()\n    \n    const [email, setEmail] = useState('')\n    const [validEmail, setValidEmail] = useState(false)\n    const [userEmail, setEmailFocus] = useState(false)\n\n    const [pwd, setPwd] = useState('')\n    const [validPwd, setValidPwd] = useState(false)\n    const [pwdFocus, setPwdFocus] = useState(false)\n\n    const [matchPwd, setMatchPwd] = useState('')\n    const [validMatch, setValidMatch] = useState(false)\n    const [matchFocus, setMatchFocus] = useState(false)\n\n    const [errMsg, setErrMsg] = useState('')\n    const [success, setSuccess] = useState(false)\n\n    // Set focus to first item\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    // Check valid username\n    useEffect(() => {\n        const result = EMAIL_REGEX.test(email);\n        console.log(result);\n        console.log(email);\n        setValidEmail(result);\n    }, [email])\n\n    // Check if password is valid and matches confirm password\n    useEffect(() => {\n        const result = PASSWORD_REGEX.test(pwd);\n        console.log(result);\n        console.log(pwd);\n        setValidPwd(result);\n        const match = pwd === matchPwd\n        setValidMatch(match)\n    }, [pwd, matchPwd])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [email, pwd, matchPwd])\n\n    return (\n        <section>\n        </section>\n    )\n}\n\nexport default Signup"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD;;AAEA;AAAA;AACA,MAAMC,WAAW,GAAG,SAAS;AAC7B,MAAMC,cAAc,GAAG,UAAU;AAEjC,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAMC,OAAO,GAAGN,MAAM,EAAE;EACxB,MAAMO,MAAM,GAAGP,MAAM,EAAE;EAEvB,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,SAAS,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAElD,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAACyB,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACZI,OAAO,CAACwB,OAAO,CAACC,KAAK,EAAE;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7B,SAAS,CAAC,MAAM;IACZ,MAAM8B,MAAM,GAAG7B,WAAW,CAAC8B,IAAI,CAACzB,KAAK,CAAC;IACtC0B,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBE,OAAO,CAACC,GAAG,CAAC3B,KAAK,CAAC;IAClBG,aAAa,CAACqB,MAAM,CAAC;EACzB,CAAC,EAAE,CAACxB,KAAK,CAAC,CAAC;;EAEX;EACAN,SAAS,CAAC,MAAM;IACZ,MAAM8B,MAAM,GAAG5B,cAAc,CAAC6B,IAAI,CAACnB,GAAG,CAAC;IACvCoB,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBE,OAAO,CAACC,GAAG,CAACrB,GAAG,CAAC;IAChBG,WAAW,CAACe,MAAM,CAAC;IACnB,MAAMI,KAAK,GAAGtB,GAAG,KAAKM,QAAQ;IAC9BG,aAAa,CAACa,KAAK,CAAC;EACxB,CAAC,EAAE,CAACtB,GAAG,EAAEM,QAAQ,CAAC,CAAC;EAEnBlB,SAAS,CAAC,MAAM;IACZyB,SAAS,CAAC,EAAE,CAAC;EACjB,CAAC,EAAE,CAACnB,KAAK,EAAEM,GAAG,EAAEM,QAAQ,CAAC,CAAC;EAE1B,oBACI;IAAA;IAAA;IAAA;EAAA,QACU;AAElB,CAAC;AAAA,GAlDKf,MAAM;AAAA,KAANA,MAAM;AAoDZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}