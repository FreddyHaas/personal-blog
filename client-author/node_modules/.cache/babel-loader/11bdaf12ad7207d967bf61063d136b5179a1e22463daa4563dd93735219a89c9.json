{"ast":null,"code":"var _jsxFileName = \"/Users/frederikhaas/repos/personal-blog/client-author/src/Components/Signup.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState, useEffect } from 'react';\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from '../api/axios';\n\n// Import faCheck, faTimes, faInfoCircle\n\n// Implement spell \nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMAIL_REGEX = /\\S+@\\S+/;\nconst PASSWORD_REGEX = /[a-zA-Z0-9]/;\nconst SIGNUP_URL = '/user/signup';\nconst Signup = () => {\n  _s();\n  const emailRef = useRef();\n  const errRef = useRef();\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false);\n  const [emailFocus, setEmailFocus] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  // Set focus to first item\n  useEffect(() => {\n    emailRef.current.focus();\n  }, []);\n\n  // Check valid email\n  useEffect(() => {\n    const result = EMAIL_REGEX.test(email);\n    setValidEmail(result);\n  }, [email]);\n\n  // Check if password is valid and matches confirm password\n  useEffect(() => {\n    const result = PASSWORD_REGEX.test(password);\n    setValidPwd(result);\n    const match = password === matchPwd;\n    setValidMatch(match);\n  }, [password, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [email, password, matchPwd]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(SIGNUP_URL, JSON.stringify({\n        email,\n        password\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      console.log(response.accessToken);\n      setSuccess(true);\n      // clear input fields\n    } catch (err) {\n      var _err$response;\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No server response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg('Username taken');\n      } else {\n        setErrMsg('Signup failed');\n      }\n      errRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? 'errmsg' : 'offscreen',\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validEmail ? 'valid' : 'hide'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validEmail || !email ? 'hide' : 'invalid'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailRef,\n          autoComplete: \"off\",\n          onChange: e => setEmail(e.target.value),\n          value: email,\n          required: true,\n          onFocus: () => setEmailFocus(true),\n          onBlur: () => setEmailFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"emailnote\",\n          className: emailFocus && email && !validEmail ? 'instructions' : 'offscreen',\n          children: \"Please provide valid email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validPwd ? 'valid' : 'hide'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validPwd || !password ? 'hide' : 'invalid'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          required: true,\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: pwdFocus && !validPwd ? 'instructions' : 'offscreen',\n          children: \"Please provide password with at least one character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPwd\",\n          children: [\"Confirm password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validMatch && matchPwd ? 'valid' : 'hide'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validMatch || !matchPwd ? 'hide' : 'invalid'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPwd\",\n          onChange: e => setMatchPwd(e.target.value),\n          value: matchPwd,\n          required: true,\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: matchFocus && !validMatch ? 'instructions' : 'offscreen',\n          children: \"Must match the first password input field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validEmail || !validPwd || !validMatch ? true : false,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-message\",\n        children: [\"Already signed up?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Signup, \"ntVLkd8USY+2XNHAVmKM/dYnZH0=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useRef","useState","useEffect","faCheck","faTimes","FontAwesomeIcon","axios","EMAIL_REGEX","PASSWORD_REGEX","SIGNUP_URL","Signup","emailRef","errRef","email","setEmail","validEmail","setValidEmail","emailFocus","setEmailFocus","password","setPassword","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","result","test","match","handleSubmit","e","preventDefault","response","post","JSON","stringify","headers","withCredentials","console","log","accessToken","err","status","target","value"],"sources":["/Users/frederikhaas/repos/personal-blog/client-author/src/Components/Signup.js"],"sourcesContent":["import { useRef, useState, useEffect } from 'react'\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from '../api/axios'\n\n// Import faCheck, faTimes, faInfoCircle\n\n// Implement spell \nconst EMAIL_REGEX = /\\S+@\\S+/\nconst PASSWORD_REGEX = /[a-zA-Z0-9]/\nconst SIGNUP_URL = '/user/signup'\n\nconst Signup = () => {\n    const emailRef = useRef()\n    const errRef = useRef()\n    \n    const [email, setEmail] = useState('')\n    const [validEmail, setValidEmail] = useState(false)\n    const [emailFocus, setEmailFocus] = useState(false)\n\n    const [password, setPassword] = useState('')\n    const [validPwd, setValidPwd] = useState(false)\n    const [pwdFocus, setPwdFocus] = useState(false)\n\n    const [matchPwd, setMatchPwd] = useState('')\n    const [validMatch, setValidMatch] = useState(false)\n    const [matchFocus, setMatchFocus] = useState(false)\n\n    const [errMsg, setErrMsg] = useState('')\n    const [success, setSuccess] = useState(false)\n\n    // Set focus to first item\n    useEffect(() => {\n        emailRef.current.focus();\n    }, [])\n\n    // Check valid email\n    useEffect(() => {\n        const result = EMAIL_REGEX.test(email);\n        setValidEmail(result);\n    }, [email])\n\n    // Check if password is valid and matches confirm password\n    useEffect(() => {\n        const result = PASSWORD_REGEX.test(password);\n        setValidPwd(result);\n        const match = password === matchPwd\n        setValidMatch(match)\n    }, [password, matchPwd])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [email, password, matchPwd])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(SIGNUP_URL,\n                JSON.stringify({email, password}), \n                { \n                    headers: { 'Content-Type': 'application/json'}, \n                    withCredentials: true \n                }\n            )\n            console.log(response.accessToken)\n            setSuccess(true);\n            // clear input fields\n        } catch (err) {\n            if(!err?.response) {\n                setErrMsg('No server response');\n            } else if (err.response?.status === 409) {\n                setErrMsg('Username taken')\n            } else {\n                setErrMsg('Signup failed')\n            }\n            errRef.current.focus()\n        }\n    }\n\n    return (\n        <>\n            {success ? (\n                <section>\n                    <h1>Success!</h1>\n                    <p>\n                        <a href='#'>Login</a>\n                    </p>\n                </section>\n            ) : (\n                <section>\n                    <p ref={errRef} className={errMsg ? 'errmsg' : 'offscreen'}>{errMsg}</p>\n                    <h1>Sign up</h1>\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor='email'>\n                            Email:\n                            <FontAwesomeIcon icon={faCheck} className={validEmail ? 'valid' : 'hide'} />\n                            <FontAwesomeIcon icon={faTimes} className={validEmail || !email ? 'hide' : 'invalid'}/>\n                        </label>\n                        <input \n                            type='email'\n                            id='email'\n                            ref={emailRef}\n                            autoComplete=\"off\"\n                            onChange={(e) => setEmail(e.target.value)}\n                            value={email}\n                            required\n                            onFocus={() => setEmailFocus(true)}\n                            onBlur={() => setEmailFocus(false)}\n                        />\n                        <p id='emailnote' className={emailFocus && email && !validEmail ? 'instructions' : 'offscreen'}>\n                            Please provide valid email address\n                        </p>\n\n                        <label htmlFor='password'>\n                            Password:\n                            <FontAwesomeIcon icon={faCheck} className={validPwd ? 'valid' : 'hide'} />\n                            <FontAwesomeIcon icon={faTimes} className={validPwd || !password ? 'hide' : 'invalid'}/>\n                        </label>\n                        <input \n                            type='password'\n                            id='password'\n                            onChange={(e) => setPassword(e.target.value)}\n                            value={password}\n                            required\n                            onFocus={() => setPwdFocus(true)}\n                            onBlur={() => setPwdFocus(false)}\n                        />\n                        <p id='pwdnote' className={pwdFocus && !validPwd ? 'instructions' : 'offscreen'}>\n                            Please provide password with at least one character\n                        </p>\n\n                        <label htmlFor='confirmPwd'>\n                            Confirm password:\n                            <FontAwesomeIcon icon={faCheck} className={validMatch && matchPwd ? 'valid' : 'hide'} />\n                            <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPwd ? 'hide' : 'invalid'}/>\n                        </label>\n                        <input \n                            type='password'\n                            id='confirmPwd'\n                            onChange={(e) => setMatchPwd(e.target.value)}\n                            value={matchPwd}\n                            required\n                            onFocus={() => setMatchFocus(true)}\n                            onBlur={() => setMatchFocus(false)}\n                        />\n                        <p id='confirmnote' className={matchFocus && !validMatch ? 'instructions' : 'offscreen'}>\n                            Must match the first password input field\n                        </p>\n\n                        <button disabled={!validEmail || !validPwd || !validMatch ? true : false}>Sign up</button>\n                    </form>\n                    <p className='login-message'>\n                        Already signed up?<br/>\n                        <span className=\"line\">\n                            {/* Insert router link here */}\n                            <a href='#'>Login</a>\n                        </span>\n                    </p>\n                </section>\n            )}\n        </>\n    )\n}\n\nexport default Signup"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}