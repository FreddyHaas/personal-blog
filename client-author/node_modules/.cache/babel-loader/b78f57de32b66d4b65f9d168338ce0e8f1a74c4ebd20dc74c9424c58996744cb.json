{"ast":null,"code":"var _jsxFileName = \"/Users/frederikhaas/repos/personal-blog/client-author/src/components/PostEdit.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport useAuth from '../hooks/useAuth';\nimport axios from '../api/axios';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostEdit = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const {\n    auth\n  } = useAuth();\n  const navigate = useNavigate();\n  const [post, setPost] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n\n  // Load post\n  async function loadPosts() {\n    try {\n      const response = await axios.get(`/posts/${id}`);\n      return response.data;\n    } catch (err) {\n      setErrMsg('Unable to load posts');\n    }\n  }\n\n  // Store post\n  useEffect(() => {\n    const storePost = async () => {\n      setPost(await loadPosts());\n    };\n    storePost();\n  }, []);\n\n  // Submit updated post\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const {\n        id,\n        title,\n        text,\n        readtime,\n        published\n      } = post;\n      const response = await axios.post(`/posts/${id}`, JSON.stringify({\n        id,\n        title,\n        text,\n        readtime,\n        published\n      }), {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${auth.accessToken}`\n        }\n      });\n      console.log(response);\n      setPost('');\n      navigate('/home');\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No server resonse');\n      } else {\n        console.log(err);\n        setErrMsg('Creation of blogpost failed');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"create-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"create-post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          placeholder: \"Title\",\n          onChange: e => setPost({\n            ...post,\n            title: e.target.value\n          }),\n          value: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"text\",\n          placeholder: \"Your blogtext goes here..\",\n          onChange: e => setPost({\n            ...post,\n            text: e.target.value\n          }),\n          value: post.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"readtime\",\n          children: [\"Read in\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"5\",\n            min: \"0\",\n            max: \"120\",\n            step: \"1\",\n            id: \"readtime\",\n            onChange: e => setPost({\n              ...post,\n              readtime: e.target.value\n            }),\n            value: post.readtime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"published\",\n          children: [\"Publish now\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"published\",\n            onChange: e => setPost({\n              ...post,\n              published: e.target.checked ? 'true' : 'false'\n            }),\n            checked: post.published === 'true' ? 1 : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"create-post-button\",\n          children: \"Create post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: errMsg ? 'errmsg' : 'offscreen',\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(PostEdit, \"4tlhn0uHFris/ALsyo/vD033h8A=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = PostEdit;\nexport default PostEdit;\nvar _c;\n$RefreshReg$(_c, \"PostEdit\");","map":{"version":3,"names":["useParams","useState","useEffect","useNavigate","Header","useAuth","axios","PostEdit","id","console","log","auth","navigate","post","setPost","errMsg","setErrMsg","loadPosts","response","get","data","err","storePost","handleSubmit","e","preventDefault","title","text","readtime","published","JSON","stringify","headers","accessToken","target","value","checked"],"sources":["/Users/frederikhaas/repos/personal-blog/client-author/src/components/PostEdit.js"],"sourcesContent":["import { useParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Header from './Header'\nimport useAuth from '../hooks/useAuth'\nimport axios from '../api/axios'\n\nconst PostEdit = () => {\n\n    const { id } = useParams()\n    console.log(id);\n\n    const { auth } = useAuth()\n    const navigate = useNavigate()\n\n    const [post, setPost] = useState('')\n    const [errMsg, setErrMsg] = useState('')\n\n    // Load post\n    async function loadPosts () {\n        try {\n            const response = await axios.get(`/posts/${id}`) \n            return response.data\n        } catch (err) {\n            setErrMsg('Unable to load posts')\n        }\n    }\n\n    // Store post\n    useEffect(() => {\n        const storePost = async () => {\n            setPost(await loadPosts())\n        }\n        storePost()\n    }, [])\n\n    // Submit updated post\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            const { id, title, text, readtime, published } = post\n            const response = await axios.post(`/posts/${id}`, \n                JSON.stringify({ id, title, text, readtime, published }),\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${auth.accessToken}` \n                    }\n                }\n            )\n            console.log(response)\n            setPost('')\n            navigate('/home')\n        } catch (err) {\n            if(!err?.response) {\n                setErrMsg('No server resonse')\n            } else {\n                console.log(err)\n                setErrMsg('Creation of blogpost failed')\n            }\n        }\n    }\n\n    return (\n        <>\n            <Header />\n            <section className='create-post'>\n                <h1>New Post</h1>\n                <form onSubmit={handleSubmit} className='create-post-form'>\n                    <input\n                        type='text'\n                        id='title'\n                        placeholder='Title'\n                        onChange={(e) => setPost({...post, title: e.target.value})}\n                        value={post.title}\n                    />\n                    <textarea \n                        id='text'\n                        placeholder='Your blogtext goes here..'\n                        onChange={(e) => setPost({...post, text: e.target.value})}\n                        value={post.text}\n                    >\n                    </textarea>\n                    <label htmlFor='readtime'>Read in \n                        <input\n                            type='number'\n                            placeholder='5'\n                            min='0'\n                            max='120'\n                            step='1'\n                            id='readtime'\n                            onChange={(e) => setPost({...post, readtime: e.target.value})}\n                            value={post.readtime}\n                        /><span> min</span>\n                    </label>\n                    <label htmlFor='published'>Publish now \n                        <input \n                        type='checkbox'\n                        id='published'\n                        onChange={(e) => setPost({...post, published: e.target.checked ? 'true' : 'false'})}\n                        checked={(post.published === 'true') ? 1 : 0}\n                        />\n                    </label>\n                    <button id=\"create-post-button\">Create post</button>\n                    </form>\n                    <p className={errMsg ? 'errmsg' : 'offscreen'}>{errMsg}</p>\n            </section>\n        </>\n    )\n}\n\nexport default PostEdit"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,KAAK,MAAM,cAAc;AAAA;AAAA;AAEhC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAEnB,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,EAAE;EAC1BS,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EAEf,MAAM;IAAEG;EAAK,CAAC,GAAGN,OAAO,EAAE;EAC1B,MAAMO,QAAQ,GAAGT,WAAW,EAAE;EAE9B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,eAAegB,SAAS,GAAI;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,UAASX,EAAG,EAAC,CAAC;MAChD,OAAOU,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVL,SAAS,CAAC,sBAAsB,CAAC;IACrC;EACJ;;EAEA;EACAd,SAAS,CAAC,MAAM;IACZ,MAAMoB,SAAS,GAAG,YAAY;MAC1BR,OAAO,CAAC,MAAMG,SAAS,EAAE,CAAC;IAC9B,CAAC;IACDK,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACA,MAAM;QAAEjB,EAAE;QAAEkB,KAAK;QAAEC,IAAI;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGhB,IAAI;MACrD,MAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAACO,IAAI,CAAE,UAASL,EAAG,EAAC,EAC5CsB,IAAI,CAACC,SAAS,CAAC;QAAEvB,EAAE;QAAEkB,KAAK;QAAEC,IAAI;QAAEC,QAAQ;QAAEC;MAAU,CAAC,CAAC,EACxD;QACIG,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASrB,IAAI,CAACsB,WAAY;QAChD;MACJ,CAAC,CACJ;MACDxB,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;MACrBJ,OAAO,CAAC,EAAE,CAAC;MACXF,QAAQ,CAAC,OAAO,CAAC;IACrB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACV,IAAG,EAACA,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEH,QAAQ,GAAE;QACfF,SAAS,CAAC,mBAAmB,CAAC;MAClC,CAAC,MAAM;QACHP,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;QAChBL,SAAS,CAAC,6BAA6B,CAAC;MAC5C;IACJ;EACJ,CAAC;EAED,oBACI;IAAA,wBACI,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAS,SAAS,EAAC,aAAa;MAAA,wBAC5B;QAAA,UAAI;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eACjB;QAAM,QAAQ,EAAEO,YAAa;QAAC,SAAS,EAAC,kBAAkB;QAAA,wBACtD;UACI,IAAI,EAAC,MAAM;UACX,EAAE,EAAC,OAAO;UACV,WAAW,EAAC,OAAO;UACnB,QAAQ,EAAGC,CAAC,IAAKV,OAAO,CAAC;YAAC,GAAGD,IAAI;YAAEa,KAAK,EAAEF,CAAC,CAACU,MAAM,CAACC;UAAK,CAAC,CAAE;UAC3D,KAAK,EAAEtB,IAAI,CAACa;QAAM;UAAA;UAAA;UAAA;QAAA,QACpB,eACF;UACI,EAAE,EAAC,MAAM;UACT,WAAW,EAAC,2BAA2B;UACvC,QAAQ,EAAGF,CAAC,IAAKV,OAAO,CAAC;YAAC,GAAGD,IAAI;YAAEc,IAAI,EAAEH,CAAC,CAACU,MAAM,CAACC;UAAK,CAAC,CAAE;UAC1D,KAAK,EAAEtB,IAAI,CAACc;QAAK;UAAA;UAAA;UAAA;QAAA,QAEV,eACX;UAAO,OAAO,EAAC,UAAU;UAAA,WAAC,SACtB;YACI,IAAI,EAAC,QAAQ;YACb,WAAW,EAAC,GAAG;YACf,GAAG,EAAC,GAAG;YACP,GAAG,EAAC,KAAK;YACT,IAAI,EAAC,GAAG;YACR,EAAE,EAAC,UAAU;YACb,QAAQ,EAAGH,CAAC,IAAKV,OAAO,CAAC;cAAC,GAAGD,IAAI;cAAEe,QAAQ,EAAEJ,CAAC,CAACU,MAAM,CAACC;YAAK,CAAC,CAAE;YAC9D,KAAK,EAAEtB,IAAI,CAACe;UAAS;YAAA;YAAA;YAAA;UAAA,QACvB;YAAA,UAAM;UAAI;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QACf,eACR;UAAO,OAAO,EAAC,WAAW;UAAA,WAAC,aACvB;YACA,IAAI,EAAC,UAAU;YACf,EAAE,EAAC,WAAW;YACd,QAAQ,EAAGJ,CAAC,IAAKV,OAAO,CAAC;cAAC,GAAGD,IAAI;cAAEgB,SAAS,EAAEL,CAAC,CAACU,MAAM,CAACE,OAAO,GAAG,MAAM,GAAG;YAAO,CAAC,CAAE;YACpF,OAAO,EAAGvB,IAAI,CAACgB,SAAS,KAAK,MAAM,GAAI,CAAC,GAAG;UAAE;YAAA;YAAA;YAAA;UAAA,QAC3C;QAAA;UAAA;UAAA;UAAA;QAAA,QACE,eACR;UAAQ,EAAE,EAAC,oBAAoB;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7C,eACP;QAAG,SAAS,EAAEd,MAAM,GAAG,QAAQ,GAAG,WAAY;QAAA,UAAEA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD;EAAA,gBACX;AAEX,CAAC;AAAA,GAtGKR,QAAQ;EAAA,QAEKP,SAAS,EAGPK,OAAO,EACPF,WAAW;AAAA;AAAA,KAN1BI,QAAQ;AAwGd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}