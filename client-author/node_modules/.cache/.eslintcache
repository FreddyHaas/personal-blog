[{"/Users/frederikhaas/repos/personal-blog/client-author/src/index.js":"1","/Users/frederikhaas/repos/personal-blog/client-author/src/App.js":"2","/Users/frederikhaas/repos/personal-blog/client-author/src/Components/Signup.js":"3","/Users/frederikhaas/repos/personal-blog/client-author/src/api/axios.js":"4","/Users/frederikhaas/repos/personal-blog/client-author/src/Components/Login.js":"5","/Users/frederikhaas/repos/personal-blog/client-author/src/context/AuthProvider.js":"6","/Users/frederikhaas/repos/personal-blog/client-author/src/components/Signup.js":"7","/Users/frederikhaas/repos/personal-blog/client-author/src/components/Login.js":"8","/Users/frederikhaas/repos/personal-blog/client-author/src/components/Layout.js":"9","/Users/frederikhaas/repos/personal-blog/client-author/src/hooks/useAuth.js":"10","/Users/frederikhaas/repos/personal-blog/client-author/src/components/RequireAuth.js":"11","/Users/frederikhaas/repos/personal-blog/client-author/src/components/Header.js":"12","/Users/frederikhaas/repos/personal-blog/client-author/src/components/Home.js":"13","/Users/frederikhaas/repos/personal-blog/client-author/src/components/Post.js":"14","/Users/frederikhaas/repos/personal-blog/client-author/src/components/AllPosts.js":"15","/Users/frederikhaas/repos/personal-blog/client-author/src/components/PostEdit.js":"16","/Users/frederikhaas/repos/personal-blog/client-author/src/components/PostForm.js":"17"},{"size":571,"mtime":1673865578462,"results":"18","hashOfConfig":"19"},{"size":959,"mtime":1673865583361,"results":"20","hashOfConfig":"19"},{"size":6410,"mtime":1673528338043,"results":"21","hashOfConfig":"22"},{"size":114,"mtime":1673888017116,"results":"23","hashOfConfig":"19"},{"size":3263,"mtime":1673532364584,"results":"24","hashOfConfig":"22"},{"size":372,"mtime":1673866672894,"results":"25","hashOfConfig":"19"},{"size":6709,"mtime":1673865917308,"results":"26","hashOfConfig":"19"},{"size":2758,"mtime":1673865925016,"results":"27","hashOfConfig":"19"},{"size":177,"mtime":1673865926621,"results":"28","hashOfConfig":"19"},{"size":156,"mtime":1673865597204,"results":"29","hashOfConfig":"19"},{"size":357,"mtime":1673865918931,"results":"30","hashOfConfig":"19"},{"size":735,"mtime":1673865929421,"results":"31","hashOfConfig":"19"},{"size":196,"mtime":1673865927995,"results":"32","hashOfConfig":"19"},{"size":682,"mtime":1673881132112,"results":"33","hashOfConfig":"19"},{"size":1497,"mtime":1673865930740,"results":"34","hashOfConfig":"19"},{"size":4890,"mtime":1673881199060,"results":"35","hashOfConfig":"19"},{"size":3390,"mtime":1673866751978,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16vcwtz",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1yc6s2e",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"/Users/frederikhaas/repos/personal-blog/client-author/src/index.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/App.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/Components/Signup.js",["91","92"],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/api/axios.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/Components/Login.js",["93","94","95"],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/context/AuthProvider.js",[],["96"],"/Users/frederikhaas/repos/personal-blog/client-author/src/components/Signup.js",[],[],["97","98","99","100","101","102"],"/Users/frederikhaas/repos/personal-blog/client-author/src/components/Login.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/components/Layout.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/hooks/useAuth.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/components/RequireAuth.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/components/Header.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/components/Home.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/components/Post.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/components/AllPosts.js",[],[],"/Users/frederikhaas/repos/personal-blog/client-author/src/components/PostEdit.js",["103","104","105"],[],"import { useParams, useNavigate } from \"react-router-dom\"\nimport { useState, useEffect } from \"react\"\nimport Header from \"./Header\"\nimport useAuth from \"../hooks/useAuth\"\nimport axios from \"../api/axios\"\n\nfunction PostEdit() {\n    const { id } = useParams()\n\n    const { auth } = useAuth()\n    const navigate = useNavigate()\n\n    const [post, setPost] = useState(\"\")\n    const [errMsg, setErrMsg] = useState(\"\")\n\n    // Load post\n    async function loadPosts() {\n        try {\n            const response = await axios.get(`/posts/${id}`)\n            return response.data\n        } catch (err) {\n            return setErrMsg(\"Unable to load posts\")\n        }\n    }\n\n    // Store post\n    useEffect(() => {\n        const storePost = async () => {\n            setPost(await loadPosts())\n        }\n        storePost()\n    }, [])\n\n    // Submit updated post\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            const { title, text, readtime, published } = post\n            const response = await axios.post(\n                `/posts/${id}`,\n                JSON.stringify({ title, text, readtime, published }),\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${auth.accessToken}`,\n                    },\n                }\n            )\n            console.log(response)\n            setPost(\"\")\n            navigate(\"/home\")\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg(\"No server resonse\")\n            } else {\n                setErrMsg(\"Creation of blogpost failed\")\n            }\n        }\n    }\n\n    // Delete post\n    const handleDelete = async () => {\n        try {\n            const response = await axios.delete(`/posts/${id}`, {\n                headers: { Authorization: `Bearer ${auth.accessToken}` },\n            })\n            console.log(response)\n            setPost(\"\")\n            navigate(\"/home\")\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg(\"No server resonse\")\n            } else {\n                console.log(err)\n                setErrMsg(\"Creation of blogpost failed\")\n            }\n        }\n    }\n\n    return (\n        <>\n            <Header />\n            <section className=\"create-post\">\n                <h1>New Post</h1>\n                <form onSubmit={handleSubmit} className=\"create-post-form\">\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        placeholder=\"Title\"\n                        onChange={(e) =>\n                            setPost({ ...post, title: e.target.value })\n                        }\n                        defaultValue={post.title}\n                    />\n                    <textarea\n                        id=\"text\"\n                        placeholder=\"Your blogtext goes here..\"\n                        onChange={(e) =>\n                            setPost({ ...post, text: e.target.value })\n                        }\n                        defaultValue={post.text}\n                    />\n                    <label htmlFor=\"readtime\">\n                        Read in\n                        <input\n                            type=\"number\"\n                            placeholder=\"5\"\n                            min=\"0\"\n                            max=\"120\"\n                            step=\"1\"\n                            id=\"readtime\"\n                            onChange={(e) =>\n                                setPost({ ...post, readtime: e.target.value })\n                            }\n                            defaultValue={post.readtime}\n                        />\n                        <span> min</span>\n                    </label>\n                    <label htmlFor=\"published\">\n                        Publish now\n                        <input\n                            type=\"checkbox\"\n                            id=\"published\"\n                            onChange={(e) =>\n                                setPost({\n                                    ...post,\n                                    published: !!e.target.checked,\n                                })\n                            }\n                            checked={!!post.published}\n                        />\n                    </label>\n                    <button type=\"submit\" id=\"create-post-button\">\n                        Save changes\n                    </button>\n                </form>\n                <button\n                    type=\"button\"\n                    onClick={handleDelete}\n                    id=\"delete-post-button\"\n                >\n                    Delete\n                </button>\n                <p className={errMsg ? \"errmsg\" : \"offscreen\"}>{errMsg}</p>\n            </section>\n        </>\n    )\n}\n\nexport default PostEdit\n","/Users/frederikhaas/repos/personal-blog/client-author/src/components/PostForm.js",["106","107"],[],"import { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport Header from \"./Header\"\nimport useAuth from \"../hooks/useAuth\"\nimport axios from \"../api/axios\"\n\nconst CREATEPOST_URL = \"/posts\"\n\nfunction PostForm() {\n    const { auth } = useAuth()\n    const navigate = useNavigate()\n\n    const [title, setTitle] = useState(\"\")\n    const [text, setText] = useState(\"\")\n    const [published, setPublished] = useState(false)\n    const [readtime, setReadtime] = useState(\"\")\n    const [errMsg, setErrMsg] = useState(\"\")\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            const response = await axios.post(\n                CREATEPOST_URL,\n                JSON.stringify({ title, text, readtime, published }),\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${auth.accessToken}`,\n                    },\n                }\n            )\n            console.log(response)\n            setText(\"\")\n            setPublished(\"\")\n            setReadtime(\"\")\n            navigate(\"/home\")\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg(\"No server resonse\")\n            } else {\n                console.log(err)\n                setErrMsg(\"Creation of blogpost failed\")\n            }\n        }\n    }\n\n    return (\n        <>\n            <Header />\n            <section className=\"create-post\">\n                <h1>New Post</h1>\n                <form onSubmit={handleSubmit} className=\"create-post-form\">\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        placeholder=\"Title\"\n                        onChange={(e) => setTitle(e.target.value)}\n                        value={title}\n                    />\n                    <textarea\n                        id=\"text\"\n                        placeholder=\"Your blogtext goes here..\"\n                        onChange={(e) => setText(e.target.value)}\n                    />\n                    <label htmlFor=\"readtime\">\n                        Read in\n                        <input\n                            type=\"number\"\n                            placeholder=\"5\"\n                            min=\"0\"\n                            max=\"120\"\n                            step=\"1\"\n                            id=\"readtime\"\n                            onChange={(e) => setReadtime(e.target.value)}\n                        />\n                        <span> min</span>\n                    </label>\n                    <label htmlFor=\"published\">\n                        Publish now\n                        <input\n                            type=\"checkbox\"\n                            id=\"published\"\n                            onChange={(e) =>\n                                setPublished(\n                                    e.target.checked ? \"true\" : \"false\"\n                                )\n                            }\n                        />\n                    </label>\n                    <button type=\"submit\" id=\"create-post-button\">\n                        Create post\n                    </button>\n                </form>\n                <p className={errMsg ? \"errmsg\" : \"offscreen\"}>{errMsg}</p>\n            </section>\n        </>\n    )\n}\n\nexport default PostForm\n",{"ruleId":"108","severity":1,"message":"109","line":84,"column":25,"nodeType":"110","endLine":84,"endColumn":37},{"ruleId":"108","severity":1,"message":"109","line":154,"column":29,"nodeType":"110","endLine":154,"endColumn":41},{"ruleId":"111","severity":1,"message":"112","line":9,"column":21,"nodeType":"113","messageId":"114","endLine":9,"endColumn":31},{"ruleId":"108","severity":1,"message":"109","line":31,"column":25,"nodeType":"110","endLine":31,"endColumn":37},{"ruleId":"108","severity":1,"message":"109","line":61,"column":33,"nodeType":"110","endLine":61,"endColumn":45},{"ruleId":"115","severity":2,"message":"116","line":10,"column":38,"nodeType":"117","messageId":"118","endLine":10,"endColumn":55,"suppressions":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":49,"column":13,"nodeType":"134","messageId":"135","endLine":49,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":67,"column":13,"nodeType":"134","messageId":"135","endLine":67,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":74,"column":17,"nodeType":"134","messageId":"135","endLine":74,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":32,"column":13,"nodeType":"134","messageId":"135","endLine":32,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":41,"column":17,"nodeType":"134","messageId":"135","endLine":41,"endColumn":28},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setSuccess' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-constructed-context-values","The object passed as the value prop to the Context provider (at line 10) changes every render. To fix this consider wrapping it in a useMemo hook.","ObjectExpression","defaultMsg",["136"],"jsx-a11y/label-has-for",["137"],"lines-around-directive",["138"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected",{"kind":"139","justification":"140"},"label-has-associated-control","padding-line-between-statements","directive",""]